using System;

namespace _170000Courses
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string text;
            int depth = 0;

            int bracketCountA = 0;
            int bracketCountB = 0;
            int bracketCount = 0;
            bool isZero = false;
            bool isCorrectExpression = false;
            int depthTemp = 0;


            Console.WriteLine("Enter your bracket expression. I'm waiting");
            text = Console.ReadLine();

            for (int i = 0; i < text.Length; i++)
            {

                // 1(  2(  3()3   )2   2()2   )1

                //прибавлять к счетчику глубины с каждой открывающей
                // один счетчику: + с открывающей - с закрывающей. когда 0 открывать новый счетчик +1. если 0 повторяется больше одного раза (новый счетчик 2 и больше) то высчитывать глубину по самому глубокому
                // по достижению нуля присваивать глубину новой переменной, при достижении нового нуля сравнивать с предыдущим значением переписывать если выше

                //igronring first and last  brackets
                if (text[0] == ')' || text[text.Length - 1] == '(')
                {
                    break;
                }
                else if (i == 0 || i == text.Length - 1)
                {
                    continue;
                }

                switch (text[i])
                {
                    case '(':
                        bracketCount++;
                        bracketCountA++;
                        depthTemp++;
                        break;

                    case ')':
                        bracketCount--;
                        bracketCountB++;
                        break;
                }

                if (bracketCount < 0)
                {
                    isZero = false;
                    isCorrectExpression = false;
                    break;
                }
                else if (bracketCount == 0)
                {
                    isZero = true;
                }
                else if (bracketCount > 0)
                {
                    isZero = false;
                }

                if (isZero == true)
                {
                    if (depth < depthTemp)
                    {
                        depth = depthTemp;
                    }
                    depthTemp = 0;
                }
            }


            if (isZero == true)
            {
                isCorrectExpression = true;
            }

            if (isCorrectExpression == true)
            {
                Console.ForegroundColor = ConsoleColor.Blue;
                Console.WriteLine(text + " bracket expression is correct");
                Console.ForegroundColor = ConsoleColor.White;
                Console.WriteLine($"{depth + 1} bracket depth");
            }
            else if (isCorrectExpression == false)
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine(text + " bracket expression is incorrect");
                Console.ForegroundColor = ConsoleColor.White;
            }
        }
    }
}
