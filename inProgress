using System;

namespace _170000Courses
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //r damage doesnt work
            //r damage with e x2
            //r cooldown
            //rewrite abilities with numbers
            string input;
            int ahriHP = 35;
            int azirHP = 100;

            int champSelection;
            bool isChampSelected = false;
            string playerChamp = "";
            string enemyChamp = "Azir";
            string lockIn = "no";
            string abilitySelection = "";


            string playerAbilities = "";
            string ahriAbilities = "Ahri abilities:" +
                            "\n(Q) ORB OF DECEPTION:: Deal 3 Damage. Then deal 5 more damage. Add stack of spirits help. If you have atleast 1 stack of SPIRIT RUSH then spends 1 stack and heals yourself instead of doing damage myltiplier by 2" +
                            "\n(W) FOX FIRE: Deal 3+3+3 damage next round. Add stack of spirits help in the end of the round" +
                            "\n(E) CHARM: Seduces enemy. Enemy takes triple the damage next round." +
                            "\n(R) SPIRIT RUSH: If atleast 3 stacks of spirits help is active: ignores next damage, deal 50 damage, spends 3 stacks and enemy skips his turn. Else adds 2 stacks of spirits help";
            string azirAbilities = "Azir abilities:" +
                            "\n(Q) CONQUERING SANDS: All soldiers deal 8 damage" +
                            "\n(W) ARISE!: Summon a Soldier" +
                            "\n(E) SHIFTING SANDS: Atleast 1 soldier has to be on the battle. Heals for 10 damage. All soldiers deal 4 damage. Can't be used next 3 rounds" +
                            "\n(R) EMPEROR'S DEVIDE: Deal 10 damage. Stun enemy for 2 rounds" +
                            "\n\nBUT AZIR IS NOT READY SO DON'T PICK HIM OR YOU'll BREAK EVERYTHING\n";

            int enemyHP = 0;
            int playerHP = 0;

            int round = 0;

            bool isFoxFireActive = false;
            bool isCharmActive = false;
            bool isSecondTurn = false;
            int spiritsHelp = 0;
            int spiritHelpRequirement = 3;
            string ability = "";
            string abilityEffect = "";
            int dmg = 0;

            string qAbility = "";
            string wAbility = "";
            string eAbility = "";
            string rAbility = "";

            string qAbilityEnemy = "";
            string wAbilityEnemy = "";
            string eAbilityEnemy = "";
            string rAbilityEnemy = "";

            int qAbilityDmg1 = 1;
            int qAbilityDmg2 = 3;
            int wAbilityDmg = 3;
            int eAbilityDmg = 0;
            int eAbilityMP = 0;
            int rAbilityDmg = 35;

            int enemyAbility = 0;

            int wTimer = 0;
            int eTimer = 0;

            int arise = 0;
            int shurimaPower = 0;

            while (isChampSelected != true)
            {
                Console.WriteLine("CHOOSE YOUR CHAMPION:" +
                    "\n1. Ahri" +
                    "\n2. Azir");

                champSelection = Convert.ToInt32(Console.ReadLine());
                switch (champSelection)
                {
                    case 1:
                        playerChamp = "Ahri";
                        break;
                    case 2:
                        playerChamp = "Azir";
                        break;
                    default:
                        Console.WriteLine("Error 404. Champion not Found. Close the Program");
                        break;
                }

                switch (playerChamp)
                {
                    case "Ahri":
                        Console.WriteLine(ahriAbilities);
                        break;
                    case "Azir":
                        Console.WriteLine(azirAbilities);
                        break;
                }
                Console.ForegroundColor = ConsoleColor.Yellow;
                Console.WriteLine("Lock in your champion (y or n)?");
                Console.ForegroundColor = ConsoleColor.White;
                lockIn = Console.ReadLine();
                if (lockIn == "y")
                {
                    isChampSelected = true;
                }
            }

            Console.WriteLine($"Your opponent is {enemyChamp}");

            //enemy HP and abilities
            switch (enemyChamp)
            {
                case "Ahri":
                    enemyHP = ahriHP;
                    break;
                case "Azir":
                    enemyHP = azirHP;
                    qAbilityEnemy = "CONQUERING SANDS (Q)";
                    wAbilityEnemy = "ARISE (W)";
                    eAbilityEnemy = "SHIFTING SANDS (E)";
                    rAbilityEnemy = "EMPEROR'S DEVIDE (R)";
                    break;
            }

            switch (playerChamp) //player HP and abilities
            {
                case "Ahri":
                    playerHP = ahriHP;
                    playerAbilities = ahriAbilities;
                    qAbility = "ORB OF DECEPTION (Q)";
                    qAbilityDmg1 = 3;
                    qAbilityDmg2 = 5;
                    wAbility = "FOX FIRE (W)";
                    wAbilityDmg = 3;
                    eAbility = "CHARM (E)";
                    eAbilityMP = 3;
                    rAbility = "SPIRIT RUSH (R)";
                    rAbilityDmg = 5;
                    break;
                case "Azir":
                    playerHP = azirHP;
                    playerAbilities = azirAbilities;
                    qAbility = "CONQUERING SANDS (Q)";
                    wAbility = "ARISE (W)";
                    eAbility = "SHIFTING SANDS (E)";
                    rAbility = "EMPEROR'S DEVIDE (R)";
                    break;
            }

            Console.Clear();

            while (enemyHP > 0 & playerHP > 0)
            {
                Random random = new Random();
                enemyAbility = random.Next(1, 5);

                //first intro
                if (round == 0)
                {
                    Console.ForegroundColor = ConsoleColor.Blue;
                    round++;
                    Console.WriteLine($"Round {round}");
                    Console.ForegroundColor = ConsoleColor.Green;
                    Console.WriteLine($"Your HP: {playerHP}");
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine($"Enemy {enemyChamp} HP: {enemyHP}");
                    Console.ForegroundColor = ConsoleColor.White;
                }

                Console.WriteLine(playerAbilities);
                Console.ForegroundColor = ConsoleColor.Yellow;
                Console.WriteLine("Select Ability:");
                Console.ForegroundColor = ConsoleColor.White;
                abilitySelection = Console.ReadLine();
                Console.Clear();

                //player turn
                if (playerChamp == "Ahri")
                {
                    switch (abilitySelection)
                    {
                        default:
                            Console.WriteLine("Ability not found. You skipping your turn");
                            break;
                        case "q":
                            if (isCharmActive == true && spiritsHelp > 0)
                            {
                                playerHP += (qAbilityDmg1 * eAbilityMP) * 2;
                                if (playerHP > ahriHP)
                                {
                                    playerHP = ahriHP;
                                }

                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.WriteLine($"{qAbility} heals {(qAbilityDmg1 * eAbilityMP) * 2}. Because {eAbility} is active.");
                                Console.ForegroundColor = ConsoleColor.White;

                                Console.WriteLine($"Your HP: {playerHP}");

                                playerHP += (qAbilityDmg2 * eAbilityMP) * 2;
                                if (playerHP > ahriHP)
                                {
                                    playerHP = ahriHP;
                                }
                                spiritsHelp -= 1;

                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.WriteLine($"{qAbility} heals {(qAbilityDmg2 * eAbilityMP) * 2}. Because {eAbility} is active.");
                                Console.ForegroundColor = ConsoleColor.White;

                                Console.WriteLine($"Your HP: {playerHP}");

                                Console.ForegroundColor = ConsoleColor.Magenta;
                                Console.WriteLine($"1 stack of {rAbility} is spend.");
                                Console.ForegroundColor = ConsoleColor.White;
                            }
                            else if (isCharmActive == true)
                            {
                                spiritsHelp += 1;
                                Console.ForegroundColor = ConsoleColor.Red;
                                enemyHP -= qAbilityDmg1 * eAbilityMP;
                                Console.WriteLine($"{qAbility} deals {qAbilityDmg1 * eAbilityMP} damage to enemy {enemyChamp}. Because {eAbility} is active.");
                                Console.ForegroundColor = ConsoleColor.White;

                                Console.WriteLine($"Enemy {enemyChamp} HP: {enemyHP}");

                                Console.ForegroundColor = ConsoleColor.Red;
                                enemyHP -= qAbilityDmg2 * eAbilityMP;
                                Console.WriteLine($"{qAbility} deals {qAbilityDmg2 * eAbilityMP} damage to enemy {enemyChamp}. Because {eAbility} is active.");
                                Console.ForegroundColor = ConsoleColor.White;

                                Console.WriteLine($"Enemy {enemyChamp} HP: {enemyHP}");

                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.WriteLine($"Stack of {rAbility} is gained. Total stacks: {spiritsHelp}");
                                Console.ForegroundColor = ConsoleColor.White;
                            }
                            else if (spiritsHelp > 0)
                            {
                                playerHP += qAbilityDmg1 * 2;
                                if (playerHP > ahriHP)
                                {
                                    playerHP = ahriHP;
                                }

                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.WriteLine($"{qAbility} heals {qAbilityDmg1 * 2}.");
                                Console.ForegroundColor = ConsoleColor.White;

                                Console.WriteLine($"Your HP: {playerHP}");

                                playerHP += qAbilityDmg2 * 2;
                                if (playerHP > ahriHP)
                                {
                                    playerHP = ahriHP;
                                }
                                spiritsHelp -= 1;

                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.WriteLine($"{qAbility} heals {qAbilityDmg2 * 2}.");
                                Console.ForegroundColor = ConsoleColor.White;

                                Console.WriteLine($"Your HP: {playerHP}");

                                Console.ForegroundColor = ConsoleColor.Magenta;
                                Console.WriteLine($"1 stack of {rAbility} is spend.");
                                Console.ForegroundColor = ConsoleColor.White;
                            }
                            else
                            {
                                spiritsHelp += 1;
                                Console.ForegroundColor = ConsoleColor.Red;
                                enemyHP -= qAbilityDmg1;
                                Console.WriteLine($"{qAbility} deals {qAbilityDmg1} damage to enemy {enemyChamp}.");
                                Console.ForegroundColor = ConsoleColor.White;

                                Console.WriteLine($"Enemy {enemyChamp} HP: {enemyHP}");

                                Console.ForegroundColor = ConsoleColor.Red;
                                enemyHP -= qAbilityDmg2;
                                Console.WriteLine($"{qAbility} deals {qAbilityDmg2} damage to enemy {enemyChamp}.");
                                Console.ForegroundColor = ConsoleColor.White;

                                Console.WriteLine($"Enemy {enemyChamp} HP: {enemyHP}");

                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.WriteLine($"Stack of {rAbility} is gained. Total stacks: {spiritsHelp}");
                                Console.ForegroundColor = ConsoleColor.White;
                            }
                            break;
                        case "w":
                            wTimer = round + 1;
                            isFoxFireActive = true;
                            Console.WriteLine($"{wAbility} is active on {playerChamp}");
                            //effect time out
                            break;
                        case "e":
                            eTimer = round + 1;
                            isCharmActive = true;
                            Console.WriteLine($"{eAbility} is active on {enemyChamp}");
                            break;
                        case "r":
                            if (spiritsHelp >= spiritHelpRequirement)
                            {
                                spiritsHelp -= spiritHelpRequirement;
                                enemyHP -= rAbilityDmg;
                                isSecondTurn = true;
                                Console.ForegroundColor = ConsoleColor.Magenta;
                                Console.WriteLine($"{playerChamp} uses {rAbility} and loses {spiritHelpRequirement} stacks of {rAbility}");
                                Console.ForegroundColor = ConsoleColor.White;
                                Console.ForegroundColor = ConsoleColor.Red;
                                Console.WriteLine($"{rAbility} deals {rAbilityDmg} damage to enemy {enemyChamp}");
                                Console.ForegroundColor = ConsoleColor.White;
                                Console.ForegroundColor = ConsoleColor.Blue;
                                Console.WriteLine($"{rAbility} is active on {playerChamp}");
                                Console.ForegroundColor = ConsoleColor.White;

                            }
                            else
                            {
                                spiritsHelp += 2;
                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.WriteLine($"{playerChamp} uses {rAbility} Because there is less then {spiritHelpRequirement} stacks 2 of {rAbility} is gained. Total stacks: {spiritsHelp}");
                                Console.ForegroundColor = ConsoleColor.White;
                            }
                            break;
                    }
                }
                else if (playerChamp == "Azir")
                {
                    switch (abilitySelection)
                    {
                        default:
                            Console.WriteLine("Ability not found. You're skipping your turn");
                            break;
                        case "q":
                            break;
                        case "w":
                            break;
                        case "e":
                            break;
                        case "r":
                            break;
                    }
                }

                //enemy turn
                Console.ForegroundColor = ConsoleColor.Magenta;
                Console.WriteLine("\nENEMY TURN");
                if (isSecondTurn != true)
                {
                    if (enemyChamp == "Azir")
                    {
                        if (arise >= 5)
                        {
                            playerHP -= 5 * arise;
                            Console.WriteLine($"{enemyChamp} uses {rAbilityEnemy} and deals {5 * arise}. That was rough. Azir lost all of his soldier but now he becomes stronger and summons {1 + shurimaPower} soldiers per {wAbilityEnemy}");
                            arise = 1;
                        }
                        switch (enemyAbility)
                        {
                            case 1:
                                if (arise >= 1)
                                {
                                    playerHP -= 3 * arise;
                                    Console.WriteLine($"{enemyChamp} uses {qAbilityEnemy} and deals {3 * arise} damage to {playerChamp}. Because there is a {arise} soldiers");
                                    Console.WriteLine($"Your HP: {playerHP}");
                                }
                                else
                                {
                                    playerHP -= 1;
                                    Console.WriteLine($"{enemyChamp} uses {qAbilityEnemy} but then remembers that he doesnt have any soldier. So instead he hits you with his stick and doing 1 damage");
                                }
                                break;
                            case 2:
                                arise += 1 + shurimaPower;
                                Console.WriteLine($"{enemyChamp} uses {wAbilityEnemy} and summon {shurimaPower} soldier ");
                                Console.WriteLine($"Your HP: {playerHP}");
                                break;
                            case 3:
                                enemyHP += 40;
                                if (enemyHP > azirHP)
                                {
                                    enemyHP = azirHP;
                                }
                                Console.WriteLine($"{enemyChamp} uses {eAbilityEnemy} and heals for 40 HP");
                                Console.WriteLine($"Your HP: {playerHP}");
                                break;
                            case 4:
                                Console.WriteLine($"{enemyChamp} uses {rAbilityEnemy} but because there is less then 5 soldeirs it doesnt work. Lucky you");
                                break;
                        }
                    }
                }
                else
                {
                    Console.WriteLine($"{rAbility} is active. Enemy {enemyChamp} skips his turn");
                    isSecondTurn = false;
                }
                Console.ForegroundColor = ConsoleColor.White;
                Console.BackgroundColor = ConsoleColor.Black;

                Console.ForegroundColor = ConsoleColor.Yellow;
                Console.WriteLine($"End of the round {round}. Press anything to continue");
                Console.ForegroundColor = ConsoleColor.White;
                input = Console.ReadLine();
                Console.Clear();

                //intro
                Console.ForegroundColor = ConsoleColor.Blue;
                round++;
                Console.WriteLine($"Round {round}");
                Console.ForegroundColor = ConsoleColor.Green;
                Console.WriteLine($"Your HP: {playerHP}");
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine($"Enemy {enemyChamp} HP: {enemyHP}");
                Console.ForegroundColor = ConsoleColor.White;

                //effect time out
                if (wTimer != round)
                {
                    isFoxFireActive = false;
                }
                if (eTimer != round)
                {
                    isCharmActive = false;
                }


                //dots
                if (isFoxFireActive == true)
                {
                    Console.WriteLine("\n\nEFFECTS STAGE");
                    if (isCharmActive == true)
                    {

                        Console.ForegroundColor = ConsoleColor.Red;
                        enemyHP -= wAbilityDmg * eAbilityMP;
                        Console.WriteLine($"{wAbility} deals {wAbilityDmg * eAbilityMP} damage to {enemyChamp}. Because {eAbility} is active. ");
                        Console.ForegroundColor = ConsoleColor.White;

                        Console.WriteLine($"{enemyChamp} HP: {enemyHP}");

                        Console.ForegroundColor = ConsoleColor.Red;
                        enemyHP -= wAbilityDmg * eAbilityMP;
                        Console.WriteLine($"{wAbility} deals {wAbilityDmg * eAbilityMP} damage to {enemyChamp}. Because {eAbility} is active");
                        Console.ForegroundColor = ConsoleColor.White;

                        Console.WriteLine($"{enemyChamp} HP: {enemyHP}");

                        Console.ForegroundColor = ConsoleColor.Red;
                        enemyHP -= wAbilityDmg * eAbilityMP;
                        Console.WriteLine($"{wAbility} deals {wAbilityDmg * eAbilityMP} damage to {enemyChamp}. Because {eAbility} is active.");
                        Console.ForegroundColor = ConsoleColor.White;

                        spiritsHelp += 1;
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.WriteLine($"Stack of {rAbility} is gained. Total stacks: {spiritsHelp}");
                        Console.ForegroundColor = ConsoleColor.White;

                        Console.WriteLine($"{enemyChamp} HP: {enemyHP}");
                    }
                    else
                    {
                        Console.ForegroundColor = ConsoleColor.Red;
                        enemyHP -= wAbilityDmg;
                        Console.WriteLine($"{wAbility} deals {wAbilityDmg} damage to {enemyChamp}");
                        Console.ForegroundColor = ConsoleColor.White;

                        Console.WriteLine($"{enemyChamp} HP: {enemyHP}");

                        Console.ForegroundColor = ConsoleColor.Red;
                        enemyHP -= wAbilityDmg;
                        Console.WriteLine($"{wAbility} deals {wAbilityDmg} damage to {enemyChamp}");
                        Console.ForegroundColor = ConsoleColor.White;

                        Console.WriteLine($"{enemyChamp} HP: {enemyHP}");

                        Console.ForegroundColor = ConsoleColor.Red;
                        enemyHP -= wAbilityDmg;
                        Console.WriteLine($"{wAbility} deals {wAbilityDmg} damage to {enemyChamp}");
                        Console.ForegroundColor = ConsoleColor.White;

                        spiritsHelp += 1;
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.WriteLine($"Stack of {rAbility} is gained. Total stacks: {spiritsHelp}");
                        Console.ForegroundColor = ConsoleColor.White;

                        Console.WriteLine($"{enemyChamp} HP: {enemyHP}");
                    }
                    Console.WriteLine("\n\n");
                }
            }

            Console.Clear(); ;
            if (playerHP > 0)
            {
                Console.BackgroundColor = ConsoleColor.DarkGreen;
                Console.WriteLine("You Won");
                Console.BackgroundColor = ConsoleColor.Black;
            }
            else if (enemyHP > 0)
            {
                Console.BackgroundColor = ConsoleColor.DarkRed;
                Console.WriteLine($"Enemy {enemyChamp} has won the battle");
                Console.BackgroundColor = ConsoleColor.Black;
            }
            else if (enemyHP < 0 || playerHP < 0)
            {
                Console.BackgroundColor = ConsoleColor.DarkYellow;
                Console.WriteLine("Everybody Loses");
                Console.BackgroundColor = ConsoleColor.Black;
            }
        }
    }
}
