SHORTCUTS
ctrl + k + d //number alignment in array
alt + arrow //transport line of code
ctrl + r + r //rename variable 
ctrl + alt //set new edit cursor (can be more then one)

# DATA TYPES
int32 - whole numbers

# VARIABLES
int i;
int i = 1;
string str = "text";
int.MinValue //contain min value of type int

# ARRAYS
int[] arrayName = new int[arrayLength] { 0, 1, 2, 3, 4 };
int[] array = { 1, 2, 3, 4 };
arrayName[cellNumber] = i;
int[,] arrayMatrix = new int[5, 3]
int[,] arrayMatrix = { {0,1,2,3,4,5} {0,1,2,3,4,5} {0,1,2,3,4,5} }
arrayMatrix[0, 2] = i;
array.Length //number of cells
array.getLength(lines/rows) //number of cells (lines or rows) 

# LOGICAL OPERATORS
i== //проверка условия на истинность elements
!=
>
>=

# instamath
i -= b //тоже самое что и i=i-b

# CONSOLE COMMANDS
Console.WriteLine("text");
i = Console.ReadLine(); //for string
i = Convert.ToInt32(Console.ReadLine()); //for number

# CONCATENATION
Console.WriteLine("text" + i + 1);

# INTERPOLATION
Console.WriteLine($"text {i}");

# CONVERT
i = Convert.ToSingle(i);

# INCREMENT AND DECREMENT
i++, i--, ++i, --i; //i + 1 / i - 1

# IF
if (i > 1) {code} else {code}
if (i > 1) {code} else if {code} else if {code}

# SWITCH //в случае взаимозаключающих вариантов
switch (i)
{
case "option one": code; break;
case "option two": code; break;
case "option three": case "option four": code; break;
default: code; break;
}

# WHILE
while (i-- > 0)
{code}
end of while - if with break;
skip iteration - if with continue;

# FOR //когда есть четкие границы выполнения
for (int i = 1; i > 10; i++); //задача переменной, условие, шаг 
{code}

# RANDOM
Random randVarient - new Random(); //initialization
i = randVarient.Next(0,10); //from-to (last number don't included)

# CONSOLE
\n //перенос строки
\b //удалить последний символ
Console.Clear();
Console.SetCursorPosition(0, 5);
Console.ForegroundColor = ConsoleColor.Blue;
Console.BackgroundColor = ConsoleColor.Green; //с Console.Clear для полного окрашивания
Console.WindowHeight = 6;
Console.WindowWidth = 6;
Console.SetCursorPosition(x, y);
